name: Java CI Gradle
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  
env:
  DATREE_TOKEN: ${{ secrets.DATREE_TOKEN }} 
  KUBECONFIG: /home/alerts_deekshith/kubeconfig/config_now
  
jobs:
  build:

    runs-on: self-hosted
    
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: gradle
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew clean build
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    - name: SonarQube Quality Gate check
      uses: sonarsource/sonarqube-quality-gate-action@master
      timeout-minutes: 5
      env:
       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    - name: verifying misconfigs in helm charts 
      run: |
        datree test kube.yaml
        
    - name: Login to Docker
      uses: docker/login-action@v1
      with:
        registry: 34.125.22.167:8083
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: docker build & push to private registry 
      run: |
        docker build -t 34.125.22.167:8083/springapp:${{ github.run_number }} .
        docker push 34.125.22.167:8083/springapp:${{ github.run_number }}
        docker rmi 34.125.22.167:8083/springapp:${{ github.run_number }}
       
    - name: Trigger deploy
      run: |
        kubectl apply -f kube.yaml
        kubectl get all
    - name: test the application deployment 
      run: |
        sleep 60
        kubectl run curl --image=curlimages/curl -i --rm --restart=Never -- curl myapp:8080

    - name: Send email
      if: always()
      uses: dawidd6/action-send-mail@v2
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
        # email body as text
        body: ${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}
        # comma-separated string, send email to
        to: deekshith.snsep@gmail.com
        # from email name
        from: deekshith.snsep@gmail.com

